= Active Merchant - he9qi

=== A combination of {active merchant}[https://github.com/Shopify/active_merchant] (by {shopify}[https://github.com/Shopify]) and {active_merchant_patch_for_china}[https://github.com/flyerhzm/activemerchant_patch_for_china] (by {flyerhzm}[https://github.com/flyerhzm]). All credit goes to these two brilliant githubbers!

=== Active Merchant - Shopify

{README}[https://github.com/Shopify/active_merchant/blob/master/README.rdoc]

=== activemerchant_patch_for_china - flyerhzm

{README}[https://github.com/flyerhzm/activemerchant_patch_for_china/blob/master/README.textile]


== Download

Currently this library is available with git from:

  git://github.com/he9qi/active_merchant.git

== Installation

=== From Git

You can check out the latest source from git:

  > git pull git://github.com/he9qi/active_merchant.git

=== As a Rails plugin

ActiveMerchant includes an init.rb file. This means that Rails will automatically load ActiveMerchant on startup. Run the following command from the root directory of your Rails project to install ActiveMerchant as a Rails plugin:

  > ./script/plugin install git://github.com/he9qi/active_merchant.git

=== From Ruby Gems

Installation from RubyGems

  > gem install activemerchant, :git => "git://github.com/he9qi/active_merchant.git"

== Configuration (example: paypal and alipay)

  # Active Merchant 
  config.after_initialize do
  	ActiveMerchant::Billing::Base.mode = :test		
    paypal_options = {
  	    :login     => PAYPAL_CONFIG[:login],
	    :password  => PAYPAL_CONFIG[:password],
	    :signature => PAYPAL_CONFIG[:signature]
	}

	::STANDARD_GATEWAY = ActiveMerchant::Billing::PaypalGateway.new(paypal_options)
	::EXPRESS_GATEWAY  = ActiveMerchant::Billing::PaypalExpressGateway.new(paypal_options)

	ActiveMerchant::Billing::Integrations::Alipay::KEY     = ALIPAY_CONFIG[:key]
	ActiveMerchant::Billing::Integrations::Alipay::ACCOUNT = ALIPAY_CONFIG[:account]
	ActiveMerchant::Billing::Integrations::Alipay::EMAIL   = ALIPAY_CONFIG[:email]
  end

== Alipay usage update

Since rails embeds a utf8= when we do a method GET using form submit and Alipay requires the first parameter to be _input_charset=, > payment_service_for does not work well.  A slight modification has been made to the existing code and a javascript is added to remove the embedded utf8=  See sample usage below:

=== alipay.rb

  - content_for :head do
    = javascript_include_tag 'alipay'

  - payment_service_for @express_order.id, ActiveMerchant::Billing::Integrations::Alipay::ACCOUNT,
                            :service => :alipay,
                            :html => { :id => 'payment-form', :method => :get },
							:charset => 'utf-8'	do |service|
  - service.total_fee express_order.price
  - service.seller :email => ActiveMerchant::Billing::Integrations::Alipay::EMAIL 
  - service.notify_url url_for(:only_path => false, :action => 'notify', :id => @express_order.id) 
  - service.return_url url_for(:only_path => false, :action => 'done', :id => @express_order.id) 
  - service.show_url url_for(:only_path => false, :action => 'show', :id => @express_order.id) 
  - service.body express_order.body
  - service.service ActiveMerchant::Billing::Integrations::Alipay::Helper::CREATE_DIRECT_PAY_BY_USER 
  - service.payment_type 1 
  - service.subject express_order.subject
  - service.sign 

  = button_to_function "Submit", "document.getElementById('payment-form').submit()"
	
=== alipay.js
 
  $(function() {
    $('#payment-form > div input[name=utf8]').remove()
  })
